import yt_dlp
import os


def download_playlist(url: str, download_audio: bool = False):
    # –ë–∞–∑–æ–≤–∏–π —à–∞–±–ª–æ–Ω —ñ–º–µ–Ω—É–≤–∞–Ω–Ω—è
    output_template = "_%(playlist_title)s/Tutorial %(playlist_index)s - %(title)s.%(ext)s"

    # –§–æ—Ä–º–∞—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    if download_audio:
        ydl_format = 'bestaudio/best'
        postprocessors = [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }]
        extension = 'mp3'
    else:
        ydl_format = 'bestvideo+bestaudio/best'
        postprocessors = [{
            'key': 'FFmpegVideoConvertor',
            'preferedformat': 'mp4',
        }]
        extension = 'mp4'

    # –û–ø—Ü—ñ—ó –¥–ª—è yt-dlp
    ydl_opts = {
        'outtmpl': output_template,
        'format': ydl_format,
        'merge_output_format': extension,
        'postprocessors': postprocessors,
        'progress_hooks': [hook],
        'ignoreerrors': True,
        'quiet': False,
        'no_warnings': True,
    }

    # –ó–∞–ø—É—Å–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])


def hook(d):
    if d['status'] == 'finished':
        print(f"‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {d['filename']}")


if __name__ == "__main__":
    url = input("üîó –í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç YouTube: ").strip()
    choice = input("üéµ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∞—É–¥—ñ–æ (mp3)? [y/N]: ").strip().lower()
    download_audio = choice == 'y'
    download_playlist(url, download_audio)
